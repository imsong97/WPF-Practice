--삭제 환자 프로시저
--
IF EXISTS (SELECT name FROM sys.objects WHERE name = 'WEB_ADMIN_HRDBFROMACCESSCONTROL_PAT_DELETE_SCHEDULER')
BEGIN
	DROP PROCEDURE WEB_ADMIN_HRDBFROMACCESSCONTROL_PAT_DELETE_SCHEDULER
END
GO
CREATE PROCEDURE [dbo].[WEB_ADMIN_HRDBFROMACCESSCONTROL_PAT_DELETE_SCHEDULER]
	@UpdateIP 				VARCHAR(15)		= '127.0.0.1'
WITH ENCRYPTION
AS 
BEGIN 
	-----Procedure 중복실행 방지
	DECLARE @CNTPROC INT=0
	SELECT @CNTPROC=COUNT(obj.name)
	FROM   (SELECT s2.objectid, s2.text
			FROM   sys.dm_exec_requests AS s1
			CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS s2) AS q
		 , sys.objects obj
	WHERE  obj.object_id = q.objectid
	AND	   obj.name = 'WEB_ADMIN_HRDBFROMACCESSCONTROL_PAT_DELETE_SCHEDULER';
	IF (@CNTPROC>1) 
	BEGIN
	    SELECT 'Already Executing'
		RETURN
	END
	-- 삭제 환자 프로시저
	-- 변수 선언
	DECLARE @tmpHRPersonMaxCnt	INT			=	0
	DECLARE @HRPersonWhileCnt	INT			=	1
	
	DECLARE @Sabun				VARCHAR(10)	=	NULL
	DECLARE	@OrgNameID			INT			=	NULL
	DECLARE	@GradeNameID		INT			=	NULL

	DECLARE @Name				VARCHAR(50)	=	NULL
	DECLARE	@CardNo				VARCHAR(50)	=	NULL
	DECLARE	@UserCardNo			VARCHAR(50)	=	NULL
	DECLARE	@Tel				VARCHAR(68)	=	NULL
	DECLARE	@Mobile				VARCHAR(68)	=	NULL

	DECLARE	@OrgName			VARCHAR(30)	=	NULL
	DECLARE	@GradeName			VARCHAR(30)	=	NULL
	 
	DECLARE	@ParentOrgCode		VARCHAR(30)	=	NULL
	DECLARE	@ParentOrgName		VARCHAR(30)	=	NULL
	DECLARE	@OrgCode			VARCHAR(30)	=	NULL
	DECLARE @ParentOrgID        INT 		= 	NULL

	DECLARE @PersonStatus		INT			=	NULL
	DECLARE @PersonDeleteOption INT			=	NULL
	DECLARE @PersonInfoKeep		INT			=	NULL
	
	DECLARE @CardStatus			INT			=	NULL
	DECLARE @ValidDate          DATETIME    =   NULL
	DECLARE @InsertDate         DATETIME    =   NULL
	DECLARE @TestFlag		    INT			=	NULL
	DECLARE @Today    			DATETIME    =	CAST(FLOOR(CAST(GETDATE() as FLOAT)) as DATETIME)

	DECLARE @NewGroupID			INT			=	0
	DECLARE @PreOrgNameID		INT			=	0
	DECLARE @OldGroupID			INT			=	0
	DECLARE @PatientGroup		VARCHAR(50) =	'환자'

	-- 임시 HRPersonTable3 테이블 생성
	CREATE TABLE #tmpHRPerson3_0(
		Seq					INT IDENTITY(1,1) NOT NULL
		,	Sabun			VARCHAR(10)		COLLATE KOREAN_WANSUNG_CI_AS
		,	Name			NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardNo			VARCHAR(50)		COLLATE KOREAN_WANSUNG_CI_AS
		,	UserCardNo		VARCHAR(50)		COLLATE KOREAN_WANSUNG_CI_AS
		,	Tel				VARCHAR(68)		COLLATE KOREAN_WANSUNG_CI_AS
		,	Mobile			VARCHAR(68)		COLLATE KOREAN_WANSUNG_CI_AS
		,	ParentOrgCode	NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	ParentOrgName	NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	OrgCode			NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	OrgName			NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	GradeName		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonType		INT			
		,	PersonStatus	INT
		,	CardStatus		INT
		,	IssuCnt			INT
		--,	Picture			varbinary(max)   추가개발필요
		,	Email			VARCHAR(50)		COLLATE KOREAN_WANSUNG_CI_AS
		,	ValidDate		DATETIME
		,	PersonUser1		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonUser2		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonUser3		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonUser4		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonUser5		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser1		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser2		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser3		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser4		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser5		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	InsertDate		DATETIME
	)
	CREATE TABLE #tmpHRPerson3_1(
		Seq					INT IDENTITY(1,1) NOT NULL
		,	Sabun			VARCHAR(10)		COLLATE KOREAN_WANSUNG_CI_AS
		,	Name			NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardNo			VARCHAR(50)		COLLATE KOREAN_WANSUNG_CI_AS
		,	UserCardNo		VARCHAR(50)		COLLATE KOREAN_WANSUNG_CI_AS
		,	Tel				VARCHAR(68)		COLLATE KOREAN_WANSUNG_CI_AS
		,	Mobile			VARCHAR(68)		COLLATE KOREAN_WANSUNG_CI_AS
		,	ParentOrgCode	NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	ParentOrgName	NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	OrgCode			NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	OrgName			NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	GradeName		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonType		INT			
		,	PersonStatus	INT
		,	CardStatus		INT
		,	IssuCnt			INT
		--,	Picture			varbinary(max)   추가개발필요
		,	Email			VARCHAR(50)		COLLATE KOREAN_WANSUNG_CI_AS
		,	ValidDate		DATETIME
		,	PersonUser1		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonUser2		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonUser3		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonUser4		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	PersonUser5		NVARCHAR(30)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser1		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser2		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser3		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser4		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	CardUser5		NVARCHAR(50)	COLLATE KOREAN_WANSUNG_CI_AS
		,	InsertDate		DATETIME
	)

------------------------------------------------------------------
-- 삭제할 환자 HRPersonTable3에 입력
------------------------------------------------------------------
	INSERT INTO HRPersonTable3
	(
		[Sabun]
		,[Name]
		,[CardNo]
		,[UserCardNo]
		,[Tel]
		,[Mobile]
		,[ParentOrgCode]
		,[ParentOrgName]
		,[OrgCode]
		,[OrgName]
		,[GradeName]
		,[PersonType]
		,[PersonStatus]
		,[CardStatus]
		,[IssuCnt]
		,[ValidDate]
		,[InsertDate]
	)
 	SELECT  p.sabun as Sabun,
			p.name as Name, 
			c.cardno as CardNo, 
			c.usercardno as UserCardNo,
			p.tel as Tel, 
			p.mobile as Mobile, 
			null as ParentOrgCode,
			null as ParentOrgName,
			null as OrgCode,
			null as OrgName,
			'환자' as GradeName,
			0 as PersonType,
			2 as PersonStatus,
			4 as CardStatus,
			0 as IssuCnt,
			p.validdate as ValidDate,
			GETDATE() as InsertDate
	FROM person p 
		 inner join card c on p.pid = c.pid 
	     inner join Grade g on p.GradeID = g.GradeID
	WHERE g.GradeName = '환자' and Sabun not in(select * from openquery(M2, 'select SABUN from PUB.HRPERSONTABLE2')) and p.PersonStatusID = 0

-----------------------------------------------------------------------------------------------------------------------------------------------
	INSERT INTO #tmpHRPerson3_0
	(
		[Sabun]
		,[Name]
		,[CardNo]
		,[UserCardNo]
		,[Tel]
		,[Mobile]
		,[ParentOrgCode]
		,[ParentOrgName]
		,[OrgCode]
		,[OrgName]
		,[GradeName]
		,[PersonType]
		,[PersonStatus]
		,[CardStatus]
		,[IssuCnt]
		,[ValidDate]
		,[InsertDate]
	)
 	SELECT  Sabun, ISNULL(Name,''), CardNo, UserCardNo, Tel, Mobile, ParentOrgCode, 
			ParentOrgName, OrgCode, OrgName, GradeName,
			PersonType, PersonStatus, CardStatus, IssuCnt,
			ValidDate, InsertDate
	FROM HRPersonTable3

		-- 임시테이블 마지막 ROWNUM 추출
	SELECT @tmpHRPersonMaxCnt = COUNT(*) FROM #tmpHRPerson3_0
	
--1차적으로 중복되는 레코드는 빼고 삽입한다.	

	WHILE(@HRPersonWhileCnt <= @tmpHRPersonMaxCnt)
	BEGIN
		BEGIN TRY
			-- 변수 초기화

			IF ( NOT EXISTS (SELECT * FROM #tmpHRPerson3_1 WHERE 
					Sabun = (SELECT TOP(1) Sabun FROM #tmpHRPerson3_0 WHERE Seq = @HRPersonWhileCnt) ) )
			BEGIN
				INSERT INTO #tmpHRPerson3_1
				(
					[Sabun],[Name],[CardNo],[UserCardNo],[Tel],[Mobile],
					[ParentOrgCode],[ParentOrgName],[OrgCode],[OrgName],
					[GradeName],[PersonType],[PersonStatus],[CardStatus],
					[IssuCnt],[ValidDate],[InsertDate]
				)
				SELECT  					
					[Sabun],[Name],[CardNo],[UserCardNo],[Tel],[Mobile],
					[ParentOrgCode],[ParentOrgName],[OrgCode],[OrgName],
					[GradeName],[PersonType],[PersonStatus],[CardStatus],
					[IssuCnt],[ValidDate],[InsertDate]
				FROM #tmpHRPerson3_0 WHERE Seq = @HRPersonWhileCnt
			END
			ELSE
			BEGIN
				SET @TestFlag=1
			END
		END TRY
		BEGIN CATCH
			INSERT INTO ServiceLog
			(
				DateTime,ServiceLog
			)
			VALUES ( GETDATE() , 'ERROR #tmpHRPerson3_0 : ' +  ERROR_MESSAGE() )
		END CATCH
		SET @HRPersonWhileCnt = @HRPersonWhileCnt + 1
	END
	
------------------------------------------------------------------------------------ 
	-- 변수 선언
	DECLARE @tmpCardMaxCnt			INT				=	0
	DECLARE @CardWhileCnt			INT				=	1
	DECLARE @CardID					INT				=	NULL
	DECLARE @CardIDF				INT				=	NULL
	DECLARE	@CardNoF				VARCHAR(50)		=	NULL
	DECLARE	@PIDF					INT				=	NULL
	
	DECLARE @LocationID				INT				=	NULL
	DECLARE @EqMasterData			VARCHAR(8000)	=	NULL	 -- 현재 시점의 EqMaster Table에 속한 순차적인 EqMasterID
	DECLARE @MasterkWhileCnt		INT				=	1
	DECLARE @IsSecurity				VARCHAR(10)		=	''
	DECLARE @IsSecurityEqMasterID	VARCHAR(500)	=	''
	DECLARE @IsAccess				VARCHAR(32)		=	''
	DECLARE @IsAccessEqMasterID		VARCHAR(500)	=	''
	DECLARE @tmpMasterkMaxCnt		INT				=	0
	DECLARE @EqMasterID				INT				=	NULL
	DECLARE @EqCodeID				INT				=	NULL
	DECLARE @Master					INT				=	NULL
	DECLARE @EqMasterChkKey			VARCHAR(8000)	=	NULL	 -- 현재 시점의 EqMasterID
	DECLARE @CardKind				VARCHAR(2)		=	NULL
	DECLARE @LocationUse			INT				=	0		 -- 같은 위치값인지에대한 비교값
	DECLARE @FingerAuthTypeID		INT
	DECLARE @LocationData			VARCHAR(8000)	=	NULL	 -- 공용부로 지정된 전체 출입위치값 : [Value: 1|3|7|9]
	

	DECLARE @tmpPersonGroupLinkMaxCnt	INT			=	0
	DECLARE @PersonGroupLinWhileCnt		INT			=	1
	DECLARE @tmpPID						INT			=	1
	DECLARE @tmpPersonGroupID			INT			=	1
	DECLARE @tmpGroupName	            VARCHAR(50) =	NULL
	DECLARE @tmpIsDeleted               INT         =   0

	DECLARE @CursorCardID 			CURSOR 			   --8.29

	SET @HRPersonWhileCnt =	1
	SELECT @tmpHRPersonMaxCnt = COUNT(*) FROM #tmpHRPerson3_1 -- 임시테이블 마지막 ROWNUM 추출
	/* 기기권한용 */
	--------------------------------------------------------------------------------------------
	WHILE(@HRPersonWhileCnt <= @tmpHRPersonMaxCnt)
	BEGIN
		BEGIN TRY
			-- 변수 초기화
			SET @OrgNameID = 0
			SET @ParentOrgID = NULL

			SET @PreOrgNameID = NULL
			SET @GradeNameID = NULL

			SET @NewGroupID = NULL
			SET @OldGroupID = NULL
			
			
			SELECT @Sabun = Sabun, @Name = Name, @CardNo = CardNo, @Tel = Tel, @Mobile = Mobile, @OrgName = OrgName
				, @GradeName = GradeName, @PersonStatus = PersonStatus, @UserCardNo = UserCardNo, @CardStatus = CardStatus  
				, @OrgCode = OrgCode, @ParentOrgCode = ParentOrgCode, @ParentOrgName = ParentOrgName
				, @ValidDate=ValidDate, @InsertDate=InsertDate 
				FROM #tmpHRPerson3_1 WHERE Seq = @HRPersonWhileCnt

---------------------------------------------------------------------------------------------------		
-- 1. Person 추가 및 수정
---------------------------------------------------------------------------------------------------		
			-- 동일한 사번이 있는 경우 수정
			IF EXISTS (SELECT * FROM Person WHERE Sabun = @Sabun)
			BEGIN
				UPDATE Person
				SET PersonStatusID = b.PersonStatus
					,UpdateDate = GETDATE()
				FROM Person a JOIN #tmpHRPerson3_1 b
				ON a.Sabun = b.Sabun
				WHERE Seq = @HRPersonWhileCnt
			END
			ELSE
			BEGIN
				INSERT INTO Person
				(
					Sabun, Name, Tel, Mobile, OrgID, GradeID, PersonTypeID, 
					PersonStatusID, Email, ValidDate, PersonUser1, PersonUser2, 
					PersonUser3, PersonUser4, PersonUser5, InsertDate, UpdateID, UpdateDate
				)
				SELECT Sabun, Name, Tel, Mobile, @OrgNameID, @GradeNameID, 
					PersonType, PersonStatus, Email, ValidDate, PersonUser1, PersonUser2, 
					PersonUser3, PersonUser4, PersonUser5, InsertDate, 0, GETDATE()
				FROM #tmpHRPerson3_1 WHERE Seq = @HRPersonWhileCnt AND PersonStatus=0
			END
---------------------------------------------------------------------------------------------------		
-- 2. Card 추가 및 수정
---------------------------------------------------------------------------------------------------		
			IF (LEN(@CardNo)<=18) --@CardNo길이가 18이하의 경우만 업데이트 한다
			BEGIN
				--2-1. 1인 1Card 인데 기존에 같은 PID로 다른 CardNo가 있으면 휴면카드(4) 
				IF ( EXISTS (SELECT * FROM Card INNER JOIN  Person ON Card.PID=Person.PID WHERE Person.Sabun=@Sabun) ) --기존의 카드가 존재 
				BEGIN
					SET @CursorCardID=CURSOR FOR SELECT C.CardID, P.PID, C.CardNo
											FROM Card C 
											INNER JOIN 
												(SELECT Person.Sabun, Person.PID  
													FROM Person	WHERE Person.Sabun=@Sabun) P
												ON C.PID=P.PID
					Open @CursorCardID; 
					Fetch Next From @CursorCardID Into @CardIDF, @PIDF, @CardNoF
					
					While(@@FETCH_STATUS <> -1) 
					Begin; 
						IF(@CardNo<>@CardNoF) --기존의 카드와 카드번호가 다르면 휴면으로 처리 
						BEGIN
							EXEC WEB_ADMIN_CARD_REG @PageType='M', @CardID=@CardIDF, @CardStatusID=4
							UPDATE c 
								SET ValidDate = GETDATE() 
							FROM card c					
							WHERE c.CardID = @CardIDF AND CardStatusID!=4
						END
						Fetch Next From @CursorCardID Into @CardIDF, @PIDF , @CardNoF
					End; 
					Close @CursorCardID; 
					Deallocate @CursorCardID;
				END
				IF ( NOT EXISTS (SELECT * FROM Card WHERE CardNo = @CardNo)    )   -- 카드 삭제가 아닐때.
				BEGIN
					IF ( @CardNo IS NOT NULL and @CardStatus <> 3 )
					BEGIN
						INSERT INTO 
							Card(  CardNo, PID, 
								CardStatusID, CardTypeID, ValidDate, InsertDate, UpdateID, 
								CardUser1, CardUser2, CardUser3, CardUser4, CardUser5, UserCardNo)
							SELECT @CardNo, (SELECT PID FROM Person WHERE Sabun = tp.Sabun), 
								CardStatus, 0, ISNULL(ValidDate, '2099-12-31 00:00:00'), GETDATE(), 0, 
								CardUser1, CardUser2, CardUser3, CardUser4, CardUser5 , @UserCardNo 
							FROM #tmpHRPerson3_1 tp WHERE Seq = @HRPersonWhileCnt AND CardStatus=0
					END
				END
				ELSE
				BEGIN
					SET @CardID = (select CardID from Card where CardNo = @CardNo )

					IF ( @CardStatus = 3 )	-- 카드상태가 3이면 업데이트하지 않고 바로 삭제
					BEGIN
						EXEC WEB_ADMIN_CARD_REG 'D', @CardID, 0
					END
					ELSE IF(@CardStatus = 4)
				    BEGIN
					   EXEC WEB_ADMIN_CARD_REG @PageType='M', @CardID=@CardID, @CardStatusID=4
				    END
					ELSE 
					BEGIN
						UPDATE c 
							SET CardStatusID = tp.CardStatus, 
								UpdateDate = GETDATE()
						FROM card c, ( select top 1 * from #tmpHRPerson3_1 WHERE Seq = @HRPersonWhileCnt ) tp						
						WHERE c.CardID = @CardID 
				
						UPDATE CardToEqMaster Set DownFlag = 1 where CardID = @CardID 
					END
				END
			END
---------------------------------------------------------------------------------------------------		
-- 3. 사원 상태에 따른 처리
---------------------------------------------------------------------------------------------------		
			IF(@PersonStatus in ( 1, 2) ) --  v3.2 부터 삭제하지 않고 퇴사처리 한다.  ( 사원 상태 변경, 카드 유효기간 변경 )
			BEGIN
				-- 카드 유효기간 변경 
				-- 카드 삭제 상태인데 유효기간이 남아있으면 삭제로 처리하기위하여 유효날짜를 당일 00:00:00으로 처리한다.
				-- *** ValidDate까지 유효기간으로 처리하기로 요청에 의하여 오늘 날짜를 유효날짜로 처리
				IF @ValidDate > dateadd(day,datediff(day,1,GETDATE()),0)
				BEGIN
					SET @ValidDate = FORMAT(dateadd(day, datediff(day, 1, GETDATE()), 0), 'yyyy-MM-dd') + ' 23:59:59' 
				END
				UPDATE Card
				SET ValidDate = @ValidDate
					,UpdateDate = GETDATE()
					,UpdateID = 0
				WHERE PID = (SELECT PID FROM Person WHERE Sabun = @Sabun)

				UPDATE CardToEqMaster
				SET DownFlag = 1
				WHERE CardID in (Select CardID from Card where PID = (SELECT PID FROM Person WHERE Sabun = @Sabun) )

				-- 사원상태 및 유효기간 변경
				UPDATE dbo.Person
				SET PersonStatusID = @PersonStatus
					, ValidDate = @ValidDate
					, UpdateDate = GETDATE()
					, UpdateID = 0
				WHERE Sabun = @Sabun
				-- 퇴사처리된 데이터 PersonGroupLink에서 삭제
				-------------------------------------------------------------------------------------------------------
				SET @tmpPersonGroupLinkMaxCnt	=	0
				SET @PersonGroupLinWhileCnt		=	1
				SET @tmpPID						=	1
				SET @tmpPersonGroupID			=	1
				-- 임시 PersonGroupLink 테이블 생성
				CREATE TABLE #tmpPersonGroupLink(
					Seq					INT IDENTITY(1,1) NOT NULL
					,	PID			    INT
					,	PersonGroupID	INT
				)
				INSERT INTO #tmpPersonGroupLink(PID,PersonGroupID) 
					SELECT P.PID, L.PersonGroupID FROM Person P 
					RIGHT OUTER JOIN PersonGroupLink L ON P.PID=L.PID WHERE P.Sabun=@Sabun
				-- 임시테이블 마지막 ROWNUM 추출
				SELECT @tmpPersonGroupLinkMaxCnt = COUNT(*) FROM #tmpPersonGroupLink
				
				WHILE(@PersonGroupLinWhileCnt <= @tmpPersonGroupLinkMaxCnt)
				BEGIN
					SELECT @tmpPID=PID, @tmpPersonGroupID=PersonGroupID FROM #tmpPersonGroupLink WHERE Seq=@PersonGroupLinWhileCnt
					EXEC WEB_ADMIN_PERSONGROUP_SET_ACCESS 'DEL' , @Sabun, @tmpPersonGroupID
					UPDATE CardToEqMaster Set DownFlag = 1 where CardID in (Select CardID from Card where PID = (SELECT PID FROM Person WHERE Sabun = @Sabun) )
					SET @PersonGroupLinWhileCnt = @PersonGroupLinWhileCnt + 1
				END
				DROP TABLE #tmpPersonGroupLink
				DELETE PersonGroupLink	WHERE PID = (select PID from Person where Sabun = @Sabun)
				-- 퇴사처리 PersonGroupLink삭제, Person/Card정보는 그대로 남겨둔다
			END
			ELSE
			BEGIN
				--------------------------------------------------------------------	
				if(@NewGroupID IS NOT NULL)
				BEGIN
					-- 신규팀 권한 설정
					SET @OldGroupID=NULL
					IF EXISTS (select PersonGroupID FROM PersonGroup WHERE 
						PersonGroupID=
							(SELECT TOP(1) PersonGroupID FROM PersonGroupLink L INNER JOIN Person P ON L.PID=P.PID WHERE Sabun=@Sabun))
					BEGIN
						select @OldGroupID = PersonGroupID FROM PersonGroup WHERE 
							PersonGroupID=
								(SELECT TOP(1) PersonGroupID FROM PersonGroupLink L INNER JOIN Person P ON L.PID=P.PID WHERE Sabun=@Sabun)
					END
			--		select @OldGroupID = PersonGroupID from PersonGroup where GroupName = (select OrgName from org where OrgID = @PreOrgNameID)
					--                   조직별 출입그룹설정
					IF (@OldGroupID IS NULL OR @NewGroupID <> @OldGroupID )
					BEGIN
						-- 이전 그룹 권한 삭제
						IF ( @OldGroupID is not null AND @OldGroupID<>0)
						BEGIN
							-- 그룹에서 제거
							exec dbo.[WEB_ADMIN_PERSONGROUP_SET_ACCESS] @Type='DEL' , @Sabun= @Sabun, @GroupID= @OldGroupID
						END
						-- 그룹에 권한 넣음.			
						exec dbo.[WEB_ADMIN_PERSONGROUP_SET_ACCESS] @Type='ADD' , @Sabun= @Sabun, @GroupID= @NewGroupID
						UPDATE CardToEqMaster Set DownFlag = 1 where CardID in (Select CardID from Card where PID = (SELECT PID FROM Person WHERE Sabun = @Sabun) )
					END
				END
				--------------------------------------------------------------------	
				SET @ParentOrgID = NULL
				SET @OrgNameID = NULL
			END

---------------------------------------------------------------------------------------------------		
-- 4. HRPersonTable3 임시 데이터 삭제
---------------------------------------------------------------------------------------------------		
			DELETE HRPersonTable3 WHERE Sabun = @Sabun
		END TRY
		BEGIN CATCH
			INSERT INTO ServiceLog
			(
				DateTime,ServiceLog
			)
			VALUES ( GETDATE() , 'ERROR HRPersonTable3 : ' +  ERROR_MESSAGE() )

		END CATCH

		SET @HRPersonWhileCnt = @HRPersonWhileCnt + 1
	END
	DROP TABLE #tmpHRPerson3_1
	DROP TABLE #tmpHRPerson3_0

END
GO
